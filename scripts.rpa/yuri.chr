Eğer bu notu üzerinde kalp olan küçük ahşap bir kutuda bulduysan, o zaman *tebrikler!* Muhtemelen bunu okuyan ilk kişisin. Bunu kimseyle paylaşmayı düşünmüyordum ama her nedense bir insanın, yabancı birinin bu notla karşılaşıp hikayemi okuyacağını düşününce heyecanlanıyorum. Asla tanışmayacağım birinin benimle bu kadar özel bir bağa sahip olması... Her an ikimizden birisi ölebilir -yarın bile olabilir bu- ama diğerimizin bundan hiçbir haberi bile olmayacak. Senin için, benliğimin tamamı bu notta barınıyor, böylelikle hafızanın beni götürdüğü yere kadar yaşamış olacağım. Bunu yazarken acaba bu ilgini mi çekecek yoksa ihlal edilmiş gibi mi hissedeceksin merak ediyorum. Acayip heyecanlanıyorum.

Hikâyem biraz düzensizse eğer özür dilerim ama her şey aklımda tazeyken kağıda geçirmek istedim. Öncelikle biraz kendimden bahsedeyim. Birinci sınıf üniversite öğrencisi bir kızım ve şimdiye kadar epey sıradan bir hayat yaşadım. Fena olmayan öğretmenlerin olduğu ortalama üstü bir okul bölgesinde büyüdüm. Ortaokulda ve lisenin bir kısmı boyunca koşu takımındaydım ve şimdiye kadar iki erkek arkadaşım oldu. Şu an iş terapisti olmak için çalışıyorum. Bu alana yeteri kadar değer verilmediğine ama bu alanın birçok insana muazzam bir yararı olduğuna inanıyorum.

Geçmişimi anlatma sebebim insanların birini öldürmek istemen için kafadan sakat olman ya da öfkeni kontrol etmekte sorunlar yaşaman gerektiği gibi tuhaf bir yanılgıya kapılıyor olmaları. Ama benim bu iki kategoriye de girmediğim bariz. Birçok cinayetin hane içinde, birisinin öfkesini kontrol edememesi sonucu falan olduğu doğru. Ama şu var ki bu insanlar kışkırtıldıkları için cinayet işliyorlar. İster sebebi tek büyük bir duygu patlaması olsun ister yavaş yavaş biriken talihsizlikler olsun. O insanlar o kısacık anda belirli birini belirli bir sebepten dolayı incitmek ya da öldürmek istiyorlar.

Benim bahsettiğim şeyse hiçbir sebep olmaksızın birini öldürmek, belki sadece nasıl bir şey olduğunu anlamak için. Sana da hiç öyle oldu mu? Başkaları nasıl hisseder bilmem, bu hiç başkalarıyla konuştuğum bir şey değildi çünkü. Ama çocukluğumdan beri birini öldürmenin nasıl bir his olduğunu merak etmişimdir. Belirli birini öldürmek falan değil, rastgele bir insanı işte. İstesem birine yaklaşıp beş dakikada bu dünyadan onları gönderebileceğim düşüncesi beni hep büyülemiştir.

Ama birkaç sebepten dolayı bunu hiç yapmadım. Öncelikle, hayatımın büyük bir kısmı boyunca bunu yakalanmadan yapmam mantıksal olarak imkânsızdı. Ehliyetimi alalı daha birkaç sene oldu. Ama ehliyetimi aldığım zaman diliminde bile hazırlıklar şüphe uyandıracak kadar fazla zaman alırdı. Anca üniversiteye başlayınca bunun artık bir engel teşkil etmediğini fark ettim.

Bir diğer sebepse gereğinden fazla insana zarar vermekten korkmamdı. Bunu okurken içinden gülmek gelebilir, çok tutarsız bir sebep gibi geliyor insana. Ama açıklamama izin ver: Zaten ölü olduğu için bu durumu umursayamayacak birini öldürmekten neden suçluluk hissedeyim ki? O durumda kimin için suçlu hissetmiş olurdum ki? Aksine, benim sorumlusu olmak istemediğin şey yaşayanların kederi. Bu sebeple, öldürebileceğim uygun birini bulmak için epey araştırma yapmam gerekeceğini biliyordum ve şimdiye kadar hiç öyle bir fırsat elime geçmemişti, yine diyorum, üniversiteye başlayana kadar geçerliydi bu.

Şimdi de, daha az önce bunu tecrübe etmiş biri olarak, bunun epey tatmin edici bir deneyim olduğunu söylemeliyim. Bir daha deneyeceğim bir şey mi? Muhtemelen hayır çünkü artık merakımı tatmin etmiş bulunuyorum. İkinci defa yapsam aynı hazzı almam.

Ama her neyse, eğer birini öldürmenin nasıl bir his olduğunu merak ediyorsan buyur not al yazdıklarımdan. :)

***

Üniversiteye girdikten hemen sonra insanları izlemek gibi bir alışkanlık edindim. İnsanları izlemek, hayatındaki sayısız yan karakterden birini alıp haberi bile olmadan bir ana karakter yaptığın için ilginç geliyor bana. Her gün yanından geçtiğin yüzlerce yabancının senin kadar karmaşık ve detaylı bir hayat hikayesinin olduğunu unutmak çok kolay. İnsanları izlemek ve birini öldürmekle ilgili fark ettiğim ortak bir nokta durumun sürekli bilincinde olmak. Gözlemleyecek birini bulduğumda hikâyelerini yavaş yavaş çözüyorum, aradaki boşluklar doluyor, bu gerçekten harika bir süreç.

Genellikle hafta sonları marketlere gidip insanların alışveriş arabalarına bakardım. İlgimi çeken bir şey gördüğümde alakalı kişiyi biraz gözlemlerdim. Tabi amacım öldürebileceğim birini bulmak olduğundan yanında çocuğu ya da eşi olan herkesi elerdim. Evlilik yüzükleri de elemem gereken kişileri ele veren bir başka işaretti.

O yüzden her hafta sonu bir kez falan kriterlerime uygun birini bulurdum ve onları evlerine kadar takip edip adreslerini not ederdim. Ondan sonrasında onlarla alakalı biraz daha araştırma yapmak inanılmaz kolaylaşıyordu çünkü çoğu insanın çalışma saatleri oldukça standarttı ve bu istediğim gibi onlara gelen mektupları karıştırıp evlerine girebilirdim demek oluyor. Bunu birkaç kişiye yaptım (ve bir defasında neredeyse yakalanıyordum) ama çeşitli sebeplerden dolayı onları öldürecek kadar tatmin olamamıştım.

Biraz sabırsızlanmaya başlayıp -aslında zengin birini öldürmeyi pek istemiyor oluşuma rağmen- Devon adlı bir adamı öldürmekle yetinebilirim belki diye düşünmüştüm. Ama ondan sonra karşıma yeni biri çıktı, bana mükemmel gibi gelen biri. Onu araştırdıkça onun bu iş için mükemmel olduğuna dair hissim daha da güçlendi. O noktada öldürmem gereken kişinin o olduğunu biliyordum.

Her zamanki gibi markette tanıştığım genç görünen bir kadındı. Kolunda sepetle biraz alışveriş yapıyordu. Saçı dalgalı ve koyu kahverengiydi. Bükük omuzlarında düzensizce asılı durup yorgun görünen suratını çevrelemişlerdi. Üzerinde bir şey olmayan parmakları onun bekar olabileceğinin göstergesiydi zaten ama içgüdülerim durumun bu olduğundan neredeyse emindi. Bu kadın o kadar… sadeydi ki. İnsanları izlemeye başladığımdan beri yabancıların özel hayatlarını daha iyi algılamaya başlamıştım herhâlde. Ama öyle bir hareket ediyordu ki, birden ölse kimsenin umurunda olmazmış, kimse onu özlemezmiş gibi hissettim. Tabii, onu biraz daha araştırmak istedim.

Her zamanki gibi mesai saatlerinde onun evini yokladım. Mektuplarından kadının adının Linda Watson olduğunu öğrendim. Linda sessiz bir apartmanda yaşıyordu. Mektuplarını kapısının önündeki posta kutusundan almak çok kolaydı. Hemen mektuplarına göz atmaktansa onları kaldığım yurda götürüp o işten dönmeden önce geri getirmeye karar verdim (evi kaldığım yerden 15 dakika uzaklıktaydı). Biraz araştırma yapıp mektuplara zarar vermeden nasıl açıp tekrar mühürleyebileceğimi öğrendim. Bu iş saç kurutma makinesi, tuvalet ispirtosu ve kulak pamuğuyla yapılıyormuş.

Bu, Linda hakkında biraz daha fazla bilgi edinmemi kolaylaştırdı. Linda, küçük bir muhasebe şirketinde çalışan 33 yaşında kadındı. Hangi şirket olduğunu söylememeyi tercih ederim. Doğum günü 11 Aralık tarihindeydi ve ne tesadüftür ki bir iki hafta sonraya denk geliyordu. Ayrıca bir de geçen ayı nelere para harcayarak geçirdiğini gösteren bir banka hesap dökümü buldum. Bu noktada Linda Watson’ın son derece sade bir kadın olduğuna dair kanımın ne kadar doğru olduğunu öğrendim. Çünkü listede tek ilginç bir harcama yoktu. Old Navy’e ve birkaç Starbucks’a gitmiş ve Amazon’dan 40 dolarlık alışveriş yapmış. Bunun dışında ne bir restorana gitmiş ne bir sinemaya. Kısacası zamanını sosyalleşerek geçirdiğini ima bile eden hiçbir şey yoktu. Onun haricinde, bir yemek yapma dergisi buldum. Herhâlde yemek yapmaktan hoşlanıyordu.

Apartman dairelerine girmek yörekentteki evlere girmekten daha zor çünkü apartmanlarda daha az kapı ve cam oluyor. Linda’nın mektuplarını her aldığımda ön kapıyla arka taraftaki camları yokluyordum ama her defasında kilitli oluyorlardı. Bu biraz sinir bozucuydu çünkü evine girmeyi epey istiyordum. O yüzden işe yaramazsa bile eğlenceli olabileceğini düşündüğüm bir plan düşündüm.

Geçen cumartesi Linda Watson’ın evine hafta içi uğradığım gibi uğradım. Ama bu sefer onun evde olmasını istiyordum. Onunla konuşmanın ilginç olacağını düşünmüştüm. Şansım yaver giderse, durumdan istifade içerideki bir camın kilidini bile fark ettirmeden açabilirdim. O yüzden üstümde hafif, uzun kollu bir eşofmandan başka bir şey olmadan kapısına gidip kapısını çaldım. Yaşadığım adrenalin inanılmazdı. Bir terslik yapacağım diye de ödüm kopuyordu.

Kapı açıldı ve önümde Linda Watson duruyordu, tıpkı marketteki hâli gibi. O anda, onunla ilk defa göz teması kurduktan sonra, bu kişiye değer verme riskim olduğunu fark ettim. Ne kadar bencilce olsa da değer verdiğim birini öldüremezdim, bu kişi kapıda kafası karışmış bir yüz ifadesiyle bana çekingen bir “Merhaba” diyen 33 yaşında bir kadın bile olsa.

Soğuktan kendime sarılmış vaziyette çekingen bir şekilde Linda’nın selamına karşılık verdim. Apartmanının arkasındaki ormanımsı bölgede köpeğimi gezdirdiğimi ve kaçmış olabileceğini anlattım. Köpeğimi bir saattir aradığımı söyledim ve acaba görmüş mü diye Linda’ya sordum. Linda da üzgün bir şekilde bana yardımcı olamadığı için özür dileyip gözünü dört açacağını söyledi. Moralim bozulmuş gibi bir yüz ifadesi takınıp onu rahatsız ettiğim için ben de ondan özür diledim.

Nasıl olduysa her şey tam olarak beklediğim gibi ilerledi. Linda beni içeri davet edip ısınmam için biraz kahve vermeyi teklif etti. Teklifi karşısında dışarıdan tereddüt etmiş gibi gözükmüş olsam da içten içe planlarıma bu kadar uyduğu için ona hemen gidip sarılasım vardı. Böylelikle Linda Watson 19 yaşında bir kızı koltuğunda otururken buldu. Acaba bunu iyilik olsun diye mi yapmıştı yoksa cumartesileri az önce tanıştığı (ve onu öldürmekle ilgilenen) biriyle vakit geçirmekten başka yapacak daha iyi bir şeyi mi yoktu?

Linda adımın Maria olduğunu (ki değil) ve yakınlardaki bir devlet okuluna gittiğimi öğrendi (ki gitmiyorum). Bana çok soru soracağından endişeliydim çünkü pek fazla cevap hazırlamamıştım. Muhabbeti onun yaşamına çekmeyi başardım, o da konuşmaya can atıyordu zaten. Ne iş yaptığını sordum ve o da zaten bildiğim şeyleri; bir muhasebe firmasında çalıştığını, dışarıdan müşterilerle konuşup kayıtları alıp düzenlediğini söyledi. Büyüme konusunda epey gergin olduğumu anlattım. Bana üniversitenin tadını çıkarmamı ve çok arkadaş edinmemi, çünkü çalışmaya başladığında buna çok fırsatım olmayacağını söyledi.

Evli olup olmadığını sorduğumda güldü. Evli olmadığını biliyordum ama aşk hayatını öğrenmek istiyordum. Şu anda erkek arkadaşı olmadığını söyledi (herhâlde birkaç erkek arkadaşı olmuştur şimdiye kadar ama kim bilir sonuncusu ne zamandı). Çoluk çocuk var mı diye sorduğumda daha iyi bir iş bulana kadar istemediğini söyledi. Üstüne ailesinde artrit ve depresyon gibi genetik hastalıklar olduğunu ve bunu çocuklarına geçirmekten korktuğunu söyledi.

Bunu söylemesi komikti, çünkü tuvaleti kullanmak için izin aldığımda musluğun yanında reçeteli bir ilaç şişesi gördüm. Üstünde duloksetin yazıyordu. Daha sonra bu ilacı araştırdığımda antidepresan olduğunu öğrendim. İçten içe onu öldürerek ona iyilik ederim şeklinde aklımdan şakayla karışık bir düşünce geçti ama böyle düşündüğüm için çok kötü bir insan olduğuma karar verdim.

Ziyaretin geri kalanı epey sıkıcıydı. Yemeklerden ve birkaç tane daha sıkıcı konu hakkında konuştuk ve ardından kaçmak için bir mazeret uydurdum. Elime camların kilidini açma fırsatı falan geçmedi ama apartmanını daha fazla karıştırmaya ihtiyaç da duymuyordum. Yurda geri dönerken Linda Watson’ı nasıl öldüreceğimi düşünmeye başlamıştım bile.

Karar verimlilikle eğlence arasındaydı. Eğlenceye karar verdim çünkü onu öldürürken onu kesip parçalara ayırmak hemencecik işi bitirip bugün de geçti demekten çok daha iyi olacaktı. Bir hafta sonraya geçelim, tarih 13 Aralık, yani bugün aslında. Linda Watson iki gün önce 34 yaşına bastı. Kendimle eğlenceli bir iddiaya girdim, eğer Linda doğum günü olduğu hafta sonunu yalnız geçirirse onu ziyarete gidip öldürecektim. Eğer dışarı çıkarsa ya da birileri gelirse bir dahaki hafta falan uğrayacaktım.

O yüzden bu sabah Lowe’s’a gidip bir balta satın aldım. Bak, gülüyor olabilirsin ama amaç da biraz o. Baltalar o kadar basmakalıp, o kadar “filmlerden” fırlama bir şey ki en eğlenceli seçeneğin bu olacağını düşündüm. Birine balta saplamak falan, düşününce komik bir fikir. Orada esasında çeşit çeşit baltalar vardı. Gidip iyi bir ağırlığa sahip ama hızlıca sallayabileceğim kadar hafif olan bir balta seçtim.

Beni adrenalinin asıl bastığı an baltayı aldıktan sonraki andı. Aklımdan geçen tek şey “Vay canına, bunu gerçekten yapacağım.” düşüncesiydi. Kötü bir şekilde değil tabii, sadece bu gerçekten oluyor mu gibilerinden. Bir de Linda’yla geçirdiğim vaktin anıları aklıma geliyordu ansızın. Sanki tüm hayatım gözlerimin önünden geçiyordu, tabii sadece Linda’yla geçirdiğim o sıkıcı saatten ibaretti gözlerimin önünden geçen. Konuşmamızın bazı küçük kısımları, gülüşü, mimikleri falan gibi şeyler yani.

Bir yandan da o manyak seri katiller böyle bir anda ne düşünür diye merak ettim kendi kendime. Şizofrenik sanrılar mi? Cinsel istekte artış mı? Hiçbir fikrim yok ama benim hissettiğim şey tüm algılarımın acayip bir tetiklikte ve uyuşuk olduğuydu, nasıl mümkün oluyorsa artık.

Arabadan inmeden önce baltayı çantama koymayı akıl edebildim yoksa otoparktan geçerken göze çarpacaktım. Sapı çantanın içinden çıkıyordu ama bunun pek önemi yoktu. O noktada kalbim o kadar sert atıyordu ki boğazımda hissedebiliyordum. Nefes alış verişimi yavaşlatmaya çalıştım ama kalbin öyle gümbür gümbür atarken hızlı nefes almamak elde değil.

Linda Watson’ın kapısına geldim ve çantamı yere koyduktan sonra sessizce kulağımı dayadım. Ona ait olmayan bir ses duydum. Bu bir misafir miydi? Hayır, sadece televizyonun sesiydi. Arada ayak sesleri de geliyordu. Aslına bakarsan kulağımı epey uzun bir süre kapıya tuttum çünkü içeride Linda’dan başka kimse olmadığından kesinlikle emin olmak istiyordum. Muhtemelen 10 dakika kapıyı dinleyip kendimi teselli ettikten sonra ikna oldum.

Çantamın fermuarını sessizce açıp baltayı elime aldım. Acayip titreyen elime. Vücudum nasıl bir tepki veriyordu lan böyle? Vücuduma kendine gelmesini, abartılacak bir şeyin olmadığını söyledim ama laftan anlamadı tabii. Elimin bu kadar aşırı titremesi tuhaftı aslında. Adrenalin birikmesindendi herhalde. Kendime gülüp elimi kapının tokmağına koydum. Eğer kapı kilitliyse, kapıyı çalarım, aşağı yukarı aynı sonuç olacak. Derin bir nefes alıp kaslarımı işe koyulmaya zorladım.

Kapı tokmağını hızla çevirdim. Kilitli değildi. Tek bir hareketimle kapıyı açıp içeri girdim. Linda Watson, birkaç adım ötede mutfaktaydı. Ah, demek yemek yaparken yaklaşmıştım ona. Hemen ürkülüp geriye döndü, şaşkındı. Bu kadarını bekliyordum. Hızla kapı tokmağını bırakıp baltayı iki elime aldım. Linda’nın muhtemelen çok ses çıkaracağını fark ettim hemen sonrasında. Şimdi durup düşününce bunu baştan düşünmemem aptallıktı zaten. Linda konuşmak için ağzına açar açmaz -kim bilir belki de konuşmaya başlamıştı bile- baltayı başının yanına doğru salladım.

Ama baltam tersti. Baltanın küt ucuyla vurmuştum ona. Bunu aslında bilerek yapmıştım, çünkü o saniye içinde çıkaracağı sesi en aza indirmenin en iyi yolunun bu olduğuna karar vermiştim. İşe de yaramıştı. Baltayı sallayışımda neredeyse hiç direnç hissetmemiştim. Linda’nın ağzından yarım çıkan lafı tuhaf bir homurtu gibi çıktı. Sanırım bunu ancak gürültülü bir nefes verme şeklinde tarif edebilirim. Başını dolaba vuruşuyla bu sesin çıkması birdi ve dengesini kaybettiği için geriye doğru düştü. Yere yarı yığılmış vaziyette olmasına rağmen baltayı sallamaktan çekinmedim ama bu sefer baltayı doğru şekilde tutuyordum. Baltayı nereye sallayacağımı bilmiyordum, o yüzden köprücük kemiği ve gövdesini biçmeye başladım. Balta fazla derine girmiyordu gibi ama her sallayışımda güzel bir “küt” sesi çıkıyordu ondan. Baltanın yavaşça daha derinlere sokulmasını ellerimde hissedebiliyordum, balta sanki vücudumun bir uzantısıymış gibi.

Bir hevesle baltayı gırtlağına doğru salladım ama çoğunlukla ıskalayıp yere vurdum ve apartman çapında baltanın yere vuruşu yankılandı. Bunu düşünecek vaktim yoktu. Baltayı tekrar daha dikkatli bir şekilde salladım. Gırtlaktaki kemik midir kıkırdak mıdır nedir, onu hissettiğime göre ikiye ayırmış olmalıydım. Hemen sonrasında da baltayı suratına indirmeye karar verdim ve ağzıyla burnunu çaprazlamasına kestim. Çok güzel bir his olduğundan bir kez daha yaptım.

Sonunda ufak bir ara verip hasarı inceledim. Linda feci derecede kanama geçiriyordu. Kan dalgalar şeklinde, muhtemelen atan kalbiyle eş zamanlı olarak akıyordu. Kanı etrafında gölcük oluşturup fayanslardaki aralıkları dolduruyordu. Açık mavi gömleği yırtık pırtıktı ve kararmıştı sanki parça pinçik olan gövdesiyle bir olmuş gibiydi. Hepsi kıpkırmızıydı. Suratının daha iyi halde olduğu da söylenemezdi, kırmızılar akıyordu üzerinden. Dudağı da suratının yanından asılı duruyor, kırmızı lekeli dişlerini çok tuhaf bir şekilde, sanki bir zombiymiş gibi açığa çıkarıyordu.

Ama Linda ölmüş değildi. Eli kolu hafifçe kıpraşıyordu. Sırtüstü anlamsızca hareket etmeye çalışıyordu. Her şeyden ziyade, tamamen ölmeden önce bacaklarını acınası şekilde kıpratan bir böceği andırıyordu. Aslına bakarsan temel olarak öyle yapıyordu. Ölmesinin ne kadar zaman alacağını ve onun ne hâlde olduğunu bilmiyordum. Nihayetinde et kesmek için kullandığı büyük bir bıçak aldım tezgahtan. Kana basmadan diğer yanına geçmeye çalışıp bıçakla soldan sağa boynunun üst yarısını testereyle kesmeye çalışırcasına kesmeye çalıştım. Biraz biçimsiz oldu çünkü o bölge çok yumuşaktı ve ben kestikçe bıçağın etrafında ezilip bükülüyordu. Ama bunun verdiği his baltanın verdiğinden apayrıydı. Sert bir et parçasını kesmeye çalışıyormuşum gibi bir histi (ki teknik olarak öyle yapıyordum).

Kan akmaya başlamıştı ve en önemli atar damarları da o süreçte kestiğimi ümit ediyordum. İşe yaramıştı galiba, çünkü birkaç saniye sonra Linda’nın eli kolu kıpraşacak gücünü yitirdi ve yerde öylece yığılakaldı. Kendime gelmek için birkaç saniye durdum. Durup yaşadıklarım üzerine düşünecek vaktim yoktu. Kanı temizlemek için bıçağı musluktan geçirip çantama attım. Baltayla da aynısını yaptım. Tezgahta duran dizüstü bilgisayarını aldım. Dana eti ve mantarlı bir yemek tarifi açıktı. Bilgisayarı kullanmak için almamıştım, üniversitede gayet güzel bir bilgisayarım vardı zaten. Sadece eğlencesine karıştırmak istiyordum.

Sonunda dışarı çıkıp arkamdan kapıyı kapadım. Kazağımla kot pantolonuma biraz kan bulaşmıştı. Ne iştir ki, böyle olmasını beklediğimden koyu giysiler giymiştim.

Yurda geri dönüşümde sadece olayı kafamda devamlı olarak tekrar ediyordum. Sanırım şu anda da benzeri oluyor. Ama güzel bir histi. Linda Watson öldü. Bunu biraz durup düşündüm. Bir insanın hayatını tamamen ortadan kaldırmış olmak. Çılgın bir şey. Başka nasıl tarif edeceğimi bilmiyorum.

Neyse, baltayla bıçağı kampüste bir çöp kutusuna attım. O çöp kutusu sanırım her pazartesi toplanıyor, o zamana kadar onlar da gider. Oda arkadaşım hafta sonları eve döndüğünden yurttaki odam bugün bana ait. Bu sayede Linda’nın internet geçmişini karıştırmam için bir fırsatım oldu. En önemli sırlarını burada bulacağımı düşünmekte haklıymışım.

Aslında epey edepsiz şeyler vardı, porno videoları ve hikayeleri tarzında şeyler. Arama geçmişi de öyleydi. Gezindiği çoğu site sıkıcyıdı; yemek yapma siteleri, Bejeweled gibi oyun siteleri falan. Nihayet “bir hafta önce” kısmına geldim geçmiş kısmında ve tüylerim diken diken oldu.

“İntihar yöntemleri”, “ilmik nasıl yapılır”, “tehlikeli ev kimyasalları”, “karbon monoksit zehirlenmesi” gibi çeşit çeşit aramalar vardı baya. Bunca araştırmadan sonra intihar hakkında kitap bile yazabilirdi herhâlde. Linda intihar etmeyi düşünüyordu anlaşılan. Acaba depresyonundan mı kaynaklanıyordu?

İşin ironisi çarpıcıydı. Linda belki de zaten ölecekti. Ya da belki yapacak cesareti yoktu. Eğer öyleyse onu öldürerek ona doğum günü hediyesi vermiş kadar oldum. Esasında hoş olmayan bir şekilde komik ve ağzımda değişik bir tat bıraktı. Akıl erdiremediğim kısımsa o aramaları “bir hafta önce” kısmına kadar görmememdi, ondan daha yakın tarihli bir arama yoktu bu şekilde.

Bilgisayarla birlikte kalan şeyleri çöp kutusuna attım. Bunu yapalı birkaç saat oldu ve her şeyi sakin kafayla düşünecek vakit buldum. Dediğim gibi, tatmin ediciydi ve sonunda yapabildiğime sevindim. Sonunda yapacaklarım listesinden bunu silebilirmişim gibi ya da içimde ukte kalan bir şeyi halletmişim gibi hissediyorum. Bu muhtemelen Linda Watson hakkında ilk ve son yazışım olacak. Artık sıradan bir üniversite hayatı yaşamaya devam edeceğim ama belki ara sıra insanları izlemeye devam ederim çünkü gerçekten ilginç ve eğlenceli oluyor.

Ama benim gibi kaç insan var hep merak ediyor olacağım. Bir sürü olduğundan eminim çünkü birini öldürmeye merak duymakta hiçbir sorunu yok bence. Maalesef bu, insanlarla öylece konuşabileceğin bir konu olmadığından asla bilemeyeceğim. Kime sorarsan sor muhtemelen yalan söylerler. Ama yanından geçerken sana bakan kişi seni öldürmenin nasıl bir his olduğunu düşünüyor olabilir. Elimde olsa onlara bugün olan her şeyi anlatır, kararı onlara bırakırdım. Ama kim bilir, belki bu sefer şansım yaver gitmiştir ve o kişi de sensindir. Gerçekten ama gerçekten öyle olmasını umuyorum.


~♥